//================================================
//
//目的処理[Purpose.cpp]
// Author; miura yuudai
//
//================================================

//=================================================
//インクルード読み込み
//=================================================
#include "Purpose.h"
#include "number.h"
#include "game.h"

//=============================================================================
//静的メンバ変数宣言
//=============================================================================
int CPurpose::m_nScorePurpose = 0;
int CPurpose::m_nPurpose[3] = {};
CNumber *CPurpose::m_apNumberPurpose[3];

//=============================================================================
//コンストラクタ
//=============================================================================
CPurpose::CPurpose()
{
}

//=============================================================================
//デストラクタ
//=============================================================================
CPurpose::~CPurpose()
{
}

//=============================================================================
//スコアの初期化処理
//=============================================================================
HRESULT CPurpose::Init(D3DXVECTOR3 pos, float fHight, float fWidth)
{
	//ナンバーのクリエイト生成
	for (int nCnt = 0; nCnt < 3; nCnt++)
	{
		m_apNumberPurpose[nCnt] = CNumber::Create(D3DXVECTOR3(950.0f + (nCnt * 45.0f), 90.0f, 0.0f), fHight, fWidth);
	}

	//変数初期化
	m_nScorePurpose = CGame::GetEnemyPurpose();

	return S_OK;
}

//=============================================================================
//スコアの終了処理
//=============================================================================
void CPurpose::Uninit(void)
{
	for (int nCnt = 0; nCnt < 3; nCnt++)
	{
		//終了処理
		if (m_apNumberPurpose[nCnt] != NULL)
		{
			m_apNumberPurpose[nCnt]->Uninit();
			delete m_apNumberPurpose[nCnt];
		}
	}

	//廃棄処理
	Release();
}

//=============================================================================
//スコアの更新処理
//=============================================================================
void CPurpose::Update(void)
{
	//関数呼び出し
	CalculatioPurpose();
}

//=============================================================================
//スコアの描画処理
//=============================================================================
void CPurpose::Draw(void)
{
	m_apNumberPurpose[2]->Draw();

	if (m_nScorePurpose > 9)
	{
		m_apNumberPurpose[1]->Draw();
	}

	if (m_nScorePurpose > 99)
	{
		m_apNumberPurpose[0]->Draw();
	}
}

//=============================================================================
//スコアの設定・作成処理
//=============================================================================
CPurpose * CPurpose::Create(void)
{
	//インスタンス生成
	CPurpose *pPurpose = NULL;
	pPurpose = new CPurpose;

	//初期化呼び出し
	pPurpose->Init(D3DXVECTOR3(0.0f, 0.0f, 0.0f), 30.0f, 20.0f);

	return pPurpose;
}

//=============================================================================
//スコアのセット処理
//=============================================================================
void CPurpose::SetPurpose(int nPurpose)
{
	//スコア代入
	m_nScorePurpose = nPurpose;

	//関数呼び出し
	CalculatioPurpose();
}

//=============================================================================
//スコアの足す処理
//=============================================================================
void CPurpose::ReducePurpose(int nValue)
{
	//引数からプラスする
	m_nScorePurpose -= nValue;

	//関数呼び出し
	CalculatioPurpose();
}

//=============================================================================
//スコアの計算処理
//=============================================================================
void CPurpose::CalculatioPurpose(void)
{
	//スコアの計算処理
	m_nPurpose[0] = m_nScorePurpose % 1000 / 100;
	m_nPurpose[1] = m_nScorePurpose % 100 / 10;
	m_nPurpose[2] = m_nScorePurpose % 10 / 1;

	//3桁表示
	for (int nCnt = 0; nCnt < 3; nCnt++)
	{
		//番号を表示
		m_apNumberPurpose[nCnt]->SetNumber(m_nPurpose[nCnt]);
	}
}

