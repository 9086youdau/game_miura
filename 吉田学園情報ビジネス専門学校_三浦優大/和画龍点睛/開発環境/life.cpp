//================================================
//
//life処理[life.cpp]
// Author; miura yuudai
//
//================================================

//=================================================
//インクルード読み込み
//=================================================
#include "life.h"
#include "hp.h"

//=============================================================================
//静的メンバ変数宣言
//=============================================================================
CHp *CLife::m_apHp[4] = {};

//=============================================================================
//コンストラクタ
//=============================================================================
CLife::CLife(int nPriority) : CScene(nPriority)
{
}

//=============================================================================
//デストラクタ
//=============================================================================
CLife::~CLife()
{
}

//=============================================================================
//HPの初期化処理
//=============================================================================
HRESULT CLife::Init(D3DXVECTOR3 pos, float fHight, float fWidth)
{
	//ナンバーのクリエイト生成
	for (int nCnt = 0; nCnt < 4; nCnt++)
	{
		m_apHp[nCnt] = CHp::Create(D3DXVECTOR3(1550.0f + (nCnt * 35.0f), 425.0f, 0.0f), MAX_LIFE_TEXTURE_SIZE, MAX_LIFE_TEXTURE_SIZE);
	}

	return S_OK;
}

//=============================================================================
//HPの終了処理
//=============================================================================
void CLife::Uninit(void)
{
	for (int nCnt = 0; nCnt < 4; nCnt++)
	{
		//終了処理
		if (m_apHp[nCnt] != NULL)
		{
			m_apHp[nCnt]->Uninit();
			m_apHp[nCnt] = NULL;
		}
	}

	//破棄処理
	Release();
}

//=============================================================================
//HPの更新処理
//=============================================================================
void CLife::Update(void)
{

}

//=============================================================================
//HPの描画処理
//=============================================================================
void CLife::Draw(void)
{
	//描画処理
	for (int nCnt = 0; nCnt < 4; nCnt++)
	{
		m_apHp[nCnt]->Draw();
	}
}

//=============================================================================
//HPの設定・作成処理
//=============================================================================
CLife * CLife::Create(void)
{
	//インスタンス生成
	CLife *pLife = NULL;
	pLife = new CLife;

	//初期化呼び出し
	pLife->Init(D3DXVECTOR3(0.0f, 0.0f, 0.0f), MAX_SCORE_SIZE_Y, MAX_SCORE_SIZE_X);

	//返り値
	return pLife;
}

//=============================================================================
//HPを減らす処理
//=============================================================================
void CLife::SetRelease(int nIndex)
{
	//終了処理
	m_apHp[nIndex]->Uninit();
}
